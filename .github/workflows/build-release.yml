name: build-release

on:
  release:
    types: [published]

jobs:
  build-release:
    runs-on: ${{ matrix.os }}
    env:
      BUILD_TYPE: Release
    strategy:
      fail-fast: false
      matrix:
        # specify a specific compiler to build with each OS separately
        include:
          - platform_name: linux
            os: ubuntu-20.04
            cxx: g++-10
          - platform_name: macos
            os: macos-10.15
            cxx: clang++
          # NOTE: CXX seems to be ignored on Windows, but specify it anyway for consistency
          - platform_name: windows
            os: windows-2019
            cxx: msvc

    steps:
      - uses: actions/checkout@v2

      - name: Configure CMake
        env:
          CXX: ${{ matrix.cxx }}
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source 
        # and build directories, but this is only available with CMake 3.13 and higher.  
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX:PATH=$GITHUB_WORKSPACE/artifacts

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - name: Install
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Use CMake to "install" build artifacts (only interested in CMake registered targets) to our custom artifacts directory
        run: cmake --install . --config $BUILD_TYPE

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: my-hovercraft-is-full-of-eels_build_${{ github.run_number }}_${{ matrix.platform_name }}
          path: ${{github.workspace}}/artifacts
  build-docs:
    runs-on: ubuntu-20.04
    # don't deploy docs unless release build succeeds
    needs: build-release
    steps:
      - uses: actions/checkout@v2
      - name: Set Tag Name
        shell: bash
        # trim prefix from ref to get tag name
        run: echo "TAG_NAME=${GITHUB_REF#'refs/tags/'}" >> $GITHUB_ENV
      - name: Format Docs Version Name
        shell: bash
        # trim patch version off version number as minor version specifies ABI changes
        run: echo "DOCS_VERSION=${TAG_NAME%.*}" >> $GITHUB_ENV
      - name: Build Doxygen Docs
        uses: mattnotmitt/doxygen-action@v1.3.3
      - name: Set up latest docs auto-linking
        shell: bash
        working-directory: ${{github.workspace}}
        # make docs folder, move docs there, call script to generate HTML redirect in index
        run: |
          mkdir docs
          cp -R html docs/$DOCS_VERSION
          ./generate_index $DOCS_VERSION
      - name: Deploy Docs to github-pages
        uses: JamesIves/github-pages-deploy-action@4.1.1
        with:
          branch: gh-pages
          folder: docs
          clean: false
