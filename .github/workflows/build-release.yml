name: build-release

# on:
#   release:
#     types: [published]
on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      BUILD_TYPE: Release
    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15, windows-2019]
        # has no effect on Windows, no problem
        cxx: [clang++]
        include:
          # override compiler when on Ubuntu to g++-10 (chooses g++-9 by default)
          - os: ubuntu-20.04
            cxx: g++-10

    steps:
      - uses: actions/checkout@v2

      - name: Configure CMake
        env:
          CXX: ${{ matrix.cxx }}
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source 
        # and build directories, but this is only available with CMake 3.13 and higher.  
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX:PATH=$GITHUB_WORKSPACE/artifacts

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - name: Install
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Use CMake to "install" build artifacts (only interested in CMake registered targets) to our custom artifacts directory
        run: cmake --install . --config $BUILD_TYPE

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: build_${{ github.sha }}_${{ matrix.os }}
          path: ${{github.workspace}}/artifacts
